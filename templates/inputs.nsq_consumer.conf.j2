# Read NSQ topic for metrics.
[[inputs.nsq_consumer]]
  ## Server option still works but is deprecated, we just prepend it to the nsqd array.
  {{ '#' if telegraf_inputs_nsq_consumer_server is not defined }}server = "{{ telegraf_inputs_nsq_consumer_server|d() }}"

  ## An array representing the NSQD TCP HTTP Endpoints
  nsqd = [ {% for i in telegraf_inputs_nsq_consumer_nsqd|d([]) %}"{{ i }}"{{ ', ' if not loop.last }}{% endfor %} ]

  ## An array representing the NSQLookupd HTTP Endpoints
  nsqlookupd = [ {% for i in telegraf_inputs_nsq_consumer_nsqlookupd|d([]) %}"{{ i }}"{{ ', ' if not loop.last }}{% endfor %} ]
  topic = "{{ telegraf_inputs_nsq_consumer_topic|d() }}"
  channel = "{{ telegraf_inputs_nsq_consumer_channel|d() }}"
  max_in_flight = {{ telegraf_inputs_nsq_consumer_max_in_flight|d() }}

  ## Maximum messages to read from the broker that have not been written by an
  ## output.  For best throughput set based on the number of metrics within
  ## each message and the size of the output's metric_batch_size.
  ##
  ## For example, if each message from the queue contains 10 metrics and the
  ## output metric_batch_size is 1000, setting this to 100 will ensure that a
  ## full batch is collected and the write is triggered immediately without
  ## waiting until the next flush_interval.
  {{ '#' if telegraf_inputs_nsq_consumer_max_undelivered_messages is not defined }}max_undelivered_messages = {{ telegraf_inputs_nsq_consumer_max_undelivered_messages|d() }}

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "{{ telegraf_inputs_nsq_consumer_data_format|d() }}"
