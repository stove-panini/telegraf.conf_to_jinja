# Gather timeseries from Google Cloud Platform v3 monitoring API
[[inputs.stackdriver]]
  ## GCP Project
  project = "{{ telegraf_inputs_stackdriver_project|d() }}"

  ## Include timeseries that start with the given metric type.
  metric_type_prefix_include = [ {% for i in telegraf_inputs_stackdriver_metric_type_prefix_include|d([]) %}"{{ i }}"{{ ', ' if not loop.last }}{% endfor %} ]
    "compute.googleapis.com/",
  ]

  ## Exclude timeseries that start with the given metric type.
  {{ '#' if telegraf_inputs_stackdriver_metric_type_prefix_exclude is not defined }}metric_type_prefix_exclude = [ {% for i in telegraf_inputs_stackdriver_metric_type_prefix_exclude|d([]) %}"{{ i }}"{{ ', ' if not loop.last }}{% endfor %} ]

  ## Many metrics are updated once per minute; it is recommended to override
  ## the agent level interval with a value of 1m or greater.
  interval = "{{ telegraf_inputs_stackdriver_interval|d() }}"

  ## Maximum number of API calls to make per second.  The quota for accounts
  ## varies, it can be viewed on the API dashboard:
  ##   https://cloud.google.com/monitoring/quotas#quotas_and_limits
  {{ '#' if telegraf_inputs_stackdriver_rate_limit is not defined }}rate_limit = {{ telegraf_inputs_stackdriver_rate_limit|d() }}

  ## The delay and window options control the number of points selected on
  ## each gather.  When set, metrics are gathered between:
  ##   start: now() - delay - window
  ##   end:   now() - delay
  #
  ## Collection delay; if set too low metrics may not yet be available.
  {{ '#' if telegraf_inputs_stackdriver_delay is not defined }}delay = "{{ telegraf_inputs_stackdriver_delay|d() }}"
  #
  ## If unset, the window will start at 1m and be updated dynamically to span
  ## the time between calls (approximately the length of the plugin interval).
  {{ '#' if telegraf_inputs_stackdriver_window is not defined }}window = "{{ telegraf_inputs_stackdriver_window|d() }}"

  ## TTL for cached list of metric types.  This is the maximum amount of time
  ## it may take to discover new metrics.
  {{ '#' if telegraf_inputs_stackdriver_cache_ttl is not defined }}cache_ttl = "{{ telegraf_inputs_stackdriver_cache_ttl|d() }}"

  ## If true, raw bucket counts are collected for distribution value types.
  ## For a more lightweight collection, you may wish to disable and use
  ## distribution_aggregation_aligners instead.
  {{ '#' if telegraf_inputs_stackdriver_gather_raw_distribution_buckets is not defined }}gather_raw_distribution_buckets = {{ telegraf_inputs_stackdriver_gather_raw_distribution_buckets|d()|bool|lower }}

  ## Aggregate functions to be used for metrics whose value type is
  ## distribution.  These aggregate values are recorded in in addition to raw
  ## bucket counts; if they are enabled.
  ##
  ## For a list of aligner strings see:
  ##   https://cloud.google.com/monitoring/api/ref_v3/rpc/google.monitoring.v3#aligner
  {{ '#' if telegraf_inputs_stackdriver_distribution_aggregation_aligners is not defined }}distribution_aggregation_aligners = [ {% for i in telegraf_inputs_stackdriver_distribution_aggregation_aligners|d([]) %}"{{ i }}"{{ ', ' if not loop.last }}{% endfor %} ]
  # 	"ALIGN_PERCENTILE_99",
  # 	"ALIGN_PERCENTILE_95",
  # 	"ALIGN_PERCENTILE_50",
  # ]

  ## Filters can be added to reduce the number of time series matched.  All
  ## functions are supported: starts_with, ends_with, has_substring, and
  ## one_of.  Only the '=' operator is supported.
  ##
  ## The logical operators when combining filters are defined statically using
  ## the following values:
  ##   filter ::= <resource_labels> {AND <metric_labels>}
  ##   resource_labels ::= <resource_labels> {OR <resource_label>}
  ##   metric_labels ::= <metric_labels> {OR <metric_label>}
  ##
  ## For more details, see https://cloud.google.com/monitoring/api/v3/filters
  #
  ## Resource labels refine the time series selection with the following expression:
  ##   resource.labels.<key> = <value>
  # [[inputs.stackdriver.filter.resource_labels]]
  {{ '#' if telegraf_inputs_stackdriver_key is not defined }}key = "{{ telegraf_inputs_stackdriver_key|d() }}"
